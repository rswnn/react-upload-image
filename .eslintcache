[{"/Users/venecia/rebel/react-upload-image/src/reportWebVitals.js":"1","/Users/venecia/rebel/react-upload-image/src/component/Screenshoot/useScreenshoot.js":"2","/Users/venecia/rebel/react-upload-image/src/component/Screenshoot/modal/reactangle.js":"3","/Users/venecia/rebel/react-upload-image/src/component/Screenshoot/modal/index.js":"4","/Users/venecia/rebel/react-upload-image/src/component/Screenshoot/modal/test-conva.js":"5","/Users/venecia/rebel/react-upload-image/src/App.js":"6"},{"size":362,"mtime":1610527896219,"results":"7","hashOfConfig":"8"},{"size":1249,"mtime":1610527896216,"results":"9","hashOfConfig":"8"},{"size":2750,"mtime":1610527896216,"results":"10","hashOfConfig":"8"},{"size":5661,"mtime":1610529443502,"results":"11","hashOfConfig":"8"},{"size":7764,"mtime":1610533511745,"results":"12","hashOfConfig":"8"},{"size":1658,"mtime":1610527896213,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"smgtet",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/venecia/rebel/react-upload-image/src/reportWebVitals.js",[],"/Users/venecia/rebel/react-upload-image/src/component/Screenshoot/useScreenshoot.js",["27","28"],"/Users/venecia/rebel/react-upload-image/src/component/Screenshoot/modal/reactangle.js",["29","30"],"import React from 'react';\nimport { Stage, Layer, Rect, Transformer, Group } from 'react-konva';\n\nconst Rectangle = ( { shapeProps, isSelected, onSelect, onChange, x, y, width, height, pushImage, index, deleteSnippet, onMouseOver, onMouseOut } ) => {\n  const shapeRef = React.useRef();\n  const trRef = React.useRef();\n  const [ tooltip, setTooltip ] = React.useState( false )\n\n  React.useEffect( () => {\n    if ( isSelected ) {\n      trRef.current.nodes( [ shapeRef.current ] );\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [ isSelected ] );\n\n  return (\n    <Group draggable>\n      <Rect\n        x={ x }\n        y={ y }\n        width={ width }\n        height={ height }\n        fill=\"transparent\"\n        stroke=\"yellow\"\n        dash={ [ 10, 10 ] }\n        onClick={ onSelect }\n        onTap={ onSelect }\n        ref={ shapeRef }\n        { ...shapeProps }\n        draggable\n        onMouseOver={ onMouseOver }\n        onMouseOut={ onMouseOut }\n        onMouseDown={ () => setTooltip( true ) }\n        onDragStart={ () => setTooltip( false ) }\n        onDragEnd={ ( e ) => {\n          setTooltip( true )\n          onChange( {\n            ...shapeProps,\n            x: e.target.x(),\n            y: e.target.y(),\n          } );\n        } }\n        onTransformEnd={ ( e ) => {\n          const node = shapeRef.current;\n          const scaleX = node.scaleX();\n          const scaleY = node.scaleY();\n\n          node.scaleX( 1 );\n          node.scaleY( 1 );\n          onChange( {\n            ...shapeProps,\n            x: node.x(),\n            y: node.y(),\n            width: Math.max( 5, node.width() * scaleX ),\n            height: Math.max( node.height() * scaleY ),\n          } );\n        } }\n      />\n      {tooltip && isSelected && <Rect x={ x }\n        y={ y - 10 } width={ 20 } height={ 20 } fill=\"blue\" onClick={ () => pushImage( index ) } onMouseOver={ onMouseOver }\n        onMouseOut={ onMouseOut } /> }\n      {tooltip && isSelected && <Rect x={ x + 20 }\n        y={ y - 10 } width={ 20 } height={ 20 } fill=\"red\" onClick={ () => deleteSnippet( index ) } onMouseOver={ onMouseOver }\n        onMouseOut={ onMouseOut } /> }\n      {isSelected && (\n        <Transformer\n          x={ x }\n          y={ y - 10 }\n          ref={ trRef }\n          borderDash={ [ 10, 10 ] }\n          borderEnabled={ false }\n          boundBoxFunc={ ( oldBox, newBox ) => {\n            if ( newBox.width < 5 || newBox.height < 5 ) {\n              return oldBox;\n            }\n            return newBox;\n          } }\n          rotateEnabled={ false }\n          anchorFill=\"yellow\"\n          anchorStroke=\"transparent\"\n          onMouseOver={ onMouseOver }\n          onMouseOut={ onMouseOut }\n        />\n      ) }\n    </Group>\n  );\n};\n\nexport default Rectangle","/Users/venecia/rebel/react-upload-image/src/component/Screenshoot/modal/index.js",["31","32","33","34","35","36","37","38","39","40","41","42","43","44","45"],"/Users/venecia/rebel/react-upload-image/src/component/Screenshoot/modal/test-conva.js",["46","47"],"/Users/venecia/rebel/react-upload-image/src/App.js",["48"],{"ruleId":"49","severity":1,"message":"50","line":2,"column":17,"nodeType":"51","messageId":"52","endLine":2,"endColumn":28},{"ruleId":"53","severity":1,"message":"54","line":43,"column":5,"nodeType":"55","endLine":43,"endColumn":7,"suggestions":"56"},{"ruleId":"49","severity":1,"message":"57","line":2,"column":10,"nodeType":"51","messageId":"52","endLine":2,"endColumn":15},{"ruleId":"49","severity":1,"message":"58","line":2,"column":17,"nodeType":"51","messageId":"52","endLine":2,"endColumn":22},{"ruleId":"49","severity":1,"message":"59","line":3,"column":8,"nodeType":"51","messageId":"52","endLine":3,"endColumn":15},{"ruleId":"49","severity":1,"message":"60","line":5,"column":8,"nodeType":"51","messageId":"52","endLine":5,"endColumn":17},{"ruleId":"49","severity":1,"message":"61","line":20,"column":7,"nodeType":"51","messageId":"52","endLine":20,"endColumn":12},{"ruleId":"49","severity":1,"message":"62","line":51,"column":10,"nodeType":"51","messageId":"52","endLine":51,"endColumn":26},{"ruleId":"49","severity":1,"message":"63","line":64,"column":11,"nodeType":"51","messageId":"52","endLine":64,"endColumn":19},{"ruleId":"49","severity":1,"message":"64","line":64,"column":21,"nodeType":"51","messageId":"52","endLine":64,"endColumn":32},{"ruleId":"49","severity":1,"message":"65","line":67,"column":11,"nodeType":"51","messageId":"52","endLine":67,"endColumn":15},{"ruleId":"49","severity":1,"message":"66","line":67,"column":17,"nodeType":"51","messageId":"52","endLine":67,"endColumn":24},{"ruleId":"49","severity":1,"message":"67","line":68,"column":26,"nodeType":"51","messageId":"52","endLine":68,"endColumn":42},{"ruleId":"49","severity":1,"message":"68","line":70,"column":11,"nodeType":"51","messageId":"52","endLine":70,"endColumn":15},{"ruleId":"49","severity":1,"message":"69","line":73,"column":9,"nodeType":"51","messageId":"52","endLine":73,"endColumn":15},{"ruleId":"49","severity":1,"message":"70","line":79,"column":9,"nodeType":"51","messageId":"52","endLine":79,"endColumn":16},{"ruleId":"49","severity":1,"message":"71","line":86,"column":9,"nodeType":"51","messageId":"52","endLine":86,"endColumn":15},{"ruleId":"53","severity":1,"message":"72","line":126,"column":6,"nodeType":"55","endLine":126,"endColumn":16,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":164,"column":7,"nodeType":"76","endLine":164,"endColumn":55},{"ruleId":"77","severity":1,"message":"78","line":139,"column":9,"nodeType":"79","endLine":139,"endColumn":28},{"ruleId":"80","severity":1,"message":"81","line":185,"column":20,"nodeType":"82","messageId":"83","endLine":185,"endColumn":22},{"ruleId":"49","severity":1,"message":"84","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":12},"no-unused-vars","'OptionsType' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'ref' and 'theclass'. Either include them or remove the dependency array.","ArrayExpression",["85"],"'Stage' is defined but never used.","'Layer' is defined but never used.","'Cropper' is defined but never used.","'ReactCrop' is defined but never used.","'atach' is assigned a value but never used.","'generateDownload' is defined but never used.","'multiple' is assigned a value but never used.","'setMultiple' is assigned a value but never used.","'crop' is assigned a value but never used.","'setCrop' is assigned a value but never used.","'setCompletedCrop' is assigned a value but never used.","'data' is assigned a value but never used.","'onCrop' is assigned a value but never used.","'cropend' is assigned a value but never used.","'onLoad' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'completedCrop'. Either include it or remove the dependency array.",["86"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'logo' is defined but never used.",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [ref, theclass]",{"range":"91","text":"92"},"Update the dependencies array to be: [arrImg, completedCrop]",{"range":"93","text":"94"},[1050,1052],"[ref, theclass]",[3187,3197],"[arrImg, completedCrop]"]